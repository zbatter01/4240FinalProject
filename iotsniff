#!/bin/python

import argparse
from scapy.all import *


class Sniffer:
    def __init__(self,args):
        self.args = args
    def __call__(self,packet):
        if self.args.verbose:
            packet.show()
        else:
            print(packet.summary())

    def run_forever(self):
        filter = "udp port 5353"
        if(self.args.input):
            packets = sniff(filter=filter, count=self.args.count, offline=self.args.input)
        else:
            if(self.args.interface):
                packets = sniff(filter=filter, count=self.args.count, iface=self.args.interface)
            else:
                packets = sniff(filter=filter, count=self.args.count)
        return packets
        

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-v', '--verbose',default=False, action='store_true', help='verbose output, more information')
    parser.add_argument('-i', '--interface', type=str, required=False, help='network interface name')
    parser.add_argument('-c', '--count', type=int, required=True, help='Number of packets to sniff')
    parser.add_argument('-o', '--output', type=str, required = False, help='Optional file name for output file, otherwise outputs to the terminal')
    parser.add_argument('-p', '--input', type=str, required = False, help='Optional input file name for source .pcap file. Will listen to traffic otherwise')
    args = parser.parse_args()
    sniffer = Sniffer(args)

    capture = sniffer.run_forever()
    if(args.output):
        wrpcap(args.output, capture)
    else:
        capture.show()


